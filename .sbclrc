;(block nil (setq *random-state* (make-random-state t)) (return))

#-quicklisp
(let ((quicklisp-init (merge-pathnames "quicklisp/setup.lisp"
                                       (user-homedir-pathname))))
  (when (probe-file quicklisp-init)
    (load quicklisp-init)))

#+SBCL
(setf sb-ext:*disassemble-annotate* t)

(defmacro showm (expr) `(pprint (macroexpand-1 ',expr)))

(defun factorial (n)
  (loop for result = 1 then (* result i)
        for i from 2 to n
        finally (return result)))
